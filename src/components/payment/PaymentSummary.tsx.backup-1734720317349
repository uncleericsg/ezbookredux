"use client";

import type { ComponentProps } from 'react';

import { motion } from 'framer-motion';
import { useState } from 'react';

export type TipOption;
export interface PaymentSummaryProps;

export type TipOption;
export interface PaymentSummaryProps;

// Define tip options
const TIP_OPTIONS = [0, 5, 10, 15, 20, 50] as const;
type TipOption = typeof TIP_OPTIONS[number];

export interface PaymentSummaryProps extends ComponentProps<'div'> {
  serviceName: string;
  servicePrice: number;
  initialTip: TipOption;
  /** Callback when tip amount changes */
  // eslint-disable-next-line no-unused-vars
  onTipChange: (amount: TipOption) => void;
}

const PaymentSummary = ({
  serviceName,
  servicePrice,
  initialTip,
  onTipChange,
  ...props
}: PaymentSummaryProps) => {
  const [selectedTip, setSelectedTip] = useState<TipOption>(initialTip);

  const totalAmount = servicePrice + selectedTip;

  const handleTipSelection = (tipOption: TipOption) => {
    setSelectedTip(tipOption);
    onTipChange(tipOption);
  };

  return (
    <motion.div
      {...props}
      initial={{ opacity: 0, y: 10 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="bg-gradient-to-br from-gray-800 to-gray-900 p-6 rounded-xl border border-gray-700/50"
    >
      <h2 className="text-xl font-bold text-[#FFD700] mb-4">Payment Summary</h2>
      {/* Service Details */}
      <div className="flex justify-between items-center mb-4">
        <span className="text-gray-300">{serviceName}</span>
        <span className="text-white font-semibold">${servicePrice.toFixed(2)}</span>
      </div>
      {/* Tip Selection */}
      <div className="mb-4">
        <h3 className="text-gray-300 mb-2">Add a tip</h3>
        <p className="text-sm text-gray-400 text-center">A generous tip helps keep our service team motivated and smiling! ðŸ˜Š</p>
        <div className="flex flex-wrap justify-center gap-2.5 mt-2">
          {TIP_OPTIONS.map((tipOption) => (
            <button
              key={tipOption}
              onClick={() => handleTipSelection(tipOption)}
              className={`px-3.5 py-1.5 rounded-md text-sm font-medium transition-all duration-200 ${
                selectedTip === tipOption
                  ? 'bg-pink-500/90 text-white shadow-lg shadow-pink-500/20'
                  : 'bg-gray-800/50 text-gray-300 hover:bg-pink-500/70 hover:text-white'
              }`}
            >
              ${tipOption}
            </button>
          ))}
        </div>
        {selectedTip > 0 && (
          <div className="flex justify-between items-center text-sm pt-3 mt-3 border-t border-gray-800">
            <span className="text-gray-400">Tip selected</span>
            <span className="font-medium text-gray-50">
              ${selectedTip.toFixed(2)}
            </span>
          </div>
        )}
      </div>
      {/* Total Amount */}
      <div className="flex justify-between items-center pt-4 border-t border-gray-800">
        <span className="text-lg font-medium text-gray-300">Total Amount</span>
        <div className="flex flex-col items-end">
          <span className="text-xl font-bold bg-gradient-to-r from-[#FFD700] via-[#FFDF00] to-[#FFD700] bg-clip-text text-transparent">
            ${totalAmount.toFixed(2)}
          </span>
          {selectedTip > 0 && (
            <span className="text-sm text-gray-400">
              (Includes ${selectedTip.toFixed(2)} tip)
            </span>
          )}
        </div>
      </div>
    </motion.div>
  );
};

export default PaymentSummary;
export { TIP_OPTIONS };
export type { PaymentSummaryProps, TipOption };
