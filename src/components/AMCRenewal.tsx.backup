import { Shield, CheckCircle, Loader2 } from 'lucide-react';
import React from 'react';

import type { AMCPackage } from '../types';

/**
 * Handles AMC package renewal process
 *
 * @component AMCRenewal
 * @description A React component for the iAircon Easy Booking system
 *
 * @example
 * ```tsx
 * import { AMCRenewal } from './components';
 * <AMCRenewal />
 * ```
 */

export interface AMCRenewalProps extends React.ComponentPropsWithoutRef<'div'> {
  packages: AMCPackage[];
  /** 
   * Callback when a package is selected
   * @param selectedId - The ID of the selected package
   */
  // eslint-disable-next-line no-unused-vars
  onSelect?: (selectedId: string) => void;
  loading?: boolean;
  selectedPackageId?: string;
}

export const AMCRenewal: React.FC<AMCRenewalProps> = ({
  packages = [],
  onSelect,
  loading = false,
  selectedPackageId,
  ...props
}) => {
  if (loading) {
    return (
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6" {...props}>
        {[1, 2, 3].map((i) => (
          <div
            key={i}
            className="animate-pulse bg-gray-800 rounded-lg p-6 border border-gray-700 h-[28rem]"
          />
        ))}
      </div>
    );
  }

  return (
    <div className="grid grid-cols-1 md:grid-cols-3 gap-6" {...props}>
      {packages.map((pkg) => {
        const isSelected = pkg.id === selectedPackageId;
        const isProcessing = loading && isSelected;

        return (
          <div
            key={pkg.id}
            className={`relative p-6 rounded-lg border transition-all cursor-pointer hover:border-primary/50 ${
              isSelected ? 'border-primary bg-primary/10' : 'border-gray-700 bg-gray-800'
            } ${pkg.recommended ? 'border-primary/50 bg-primary/5' : ''}`}
            onClick={() => onSelect?.(pkg.id)}
          >
            {isProcessing && (
              <div className="absolute inset-0 bg-gray-900/50 rounded-lg flex items-center justify-center">
                <Loader2 className="animate-spin text-primary" />
              </div>
            )}
            {pkg.recommended && (
              <div className="absolute -top-3 left-1/2 -translate-x-1/2 bg-primary px-4 py-1 rounded-full text-sm font-medium flex items-center gap-2">
                <Shield className="w-4 h-4" />
                Recommended
              </div>
            )}
            <div className="space-y-4">
              <div>
                <h3 className="text-xl font-semibold">{pkg.name}</h3>
                <p className="text-gray-400">{pkg.description}</p>
              </div>
              <div>
                <div className="text-3xl font-bold">
                  ${pkg.price}
                  <span className="text-lg font-normal text-gray-400">/year</span>
                </div>
                <p className="text-sm text-gray-400">Billed annually</p>
              </div>
              <ul className="space-y-2">
                {pkg.features.map((feature, index) => (
                  <li key={index} className="flex items-start gap-2">
                    <CheckCircle className="w-5 h-5 text-primary shrink-0 mt-0.5" />
                    <span>{feature}</span>
                  </li>
                ))}
              </ul>
            </div>
          </div>
        );
      })}
    </div>
  );
};

export default AMCRenewal;
