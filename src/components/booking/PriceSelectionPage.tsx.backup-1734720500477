'use client';

import { motion } from 'framer-motion';
import React from 'react';
import { useNavigate } from 'react-router-dom';

export type categorization;
export type filtering;
export type ServiceOption;
export type PriceSelectionPageProps;

















/*
 * @ai-protection - DO NOT MODIFY THIS FILE
 * This is a stable version of the price selection component that:
 * 1. Displays service pricing options
 * 2. Handles price selection logic
 * 3. Manages service type categorization
 * 4. Integrates with booking flow
 *
 * Critical Features:
 * - Dynamic price calculation
 * - Service type filtering
 * - Interactive selection UI
 * - Price validation
 * - Responsive design
 *
 * Integration Points:
 * - Booking flow state management
 * - Service catalog
 * - Price calculation service
 * - Navigation service
 *
 * @ai-visual-protection
 * @ai-flow-protection
 * @ai-state-protection
 *
 * Any modifications to this component could affect:
 * 1. Price calculations
 * 2. Service type categorization
 * 3. Booking flow progression
 * 4. User selection experience
 *
 * If changes are needed:
 * 1. Verify price calculations
 * 2. Test service categorization
 * 3. Validate selection flow
 * 4. Update documentation
 */

// Export types at the top

  title: string;
  price: number;
  usualPrice?: number;
  description: string;
  duration: string;
  paddingBefore: number;
  paddingAfter: number;
};


  className?: string;
};

const serviceOptions: ServiceOption[] = [
  {
    id: 'basic',
    title: 'Basic Service',
    price: 80,
    description: 'Standard aircon servicing',
    duration: '1 hour',
    paddingBefore: 0,
    paddingAfter: 0
  },
  {
    id: 'premium',
    title: 'Premium Service',
    price: 120,
    usualPrice: 150,
    description: 'Deep cleaning and maintenance',
    duration: '2 hours',
    paddingBefore: 0,
    paddingAfter: 0
  }
];

// Component declaration as const
const PriceSelectionPage = ({ 
  onServiceSelect, 
  className 
}: PriceSelectionPageProps) => {
  const navigate = useNavigate();

  const handleServiceSelect = (service: ServiceOption) => {
    onServiceSelect(service);
    navigate('/booking/confirmation');
  };

  return (
    <motion.div 
      className={className}
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
    >
      <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
        {serviceOptions.map((service) => (
          <motion.div
            key={service.id}
            className="p-6 rounded-lg border hover:border-primary cursor-pointer"
            whileHover={{ scale: 1.02 }}
            onClick={() => handleServiceSelect(service)}
          >
            <h3 className="text-lg font-semibold">{service.title}</h3>
            <div className="mt-2">
              <span className="text-2xl font-bold">${service.price}</span>
              {service.usualPrice && (
                <span className="ml-2 text-sm line-through text-gray-500">
                  ${service.usualPrice}
                </span>
              )}
            </div>
            <p className="mt-2 text-gray-600">{service.description}</p>
            <div className="mt-2 text-sm text-gray-500">Duration: {service.duration}</div>
          </motion.div>
        ))}
      </div>
    </motion.div>
  );
};

// Add displayName
PriceSelectionPage.displayName = 'PriceSelectionPage';

// Both named and default exports at the bottom
export { PriceSelectionPage };


undefined.displayName = 'undefined';