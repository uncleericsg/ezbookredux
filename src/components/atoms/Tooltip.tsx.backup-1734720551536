'use client';

import {
  Tooltip as MuiTooltip,
  TooltipProps as MuiTooltipProps,
  styled
} from '@mui/material';
import React from 'react';

export interface TooltipProps;


interface TooltipProps extends Omit<MuiTooltipProps, 'title'> {
  content: React.ReactNode;
  children: React.ReactElement;
}

const StyledTooltip = styled(({ className, ...props }: MuiTooltipProps) => (
  <MuiTooltip {...props} classes={{ popper: className }} />
))(({ theme }) => ({
  '& .MuiTooltip-tooltip': {
    backgroundColor: theme.palette.mode === 'dark'
      ? theme.palette.grey[900]
      : theme.palette.grey[700],
    color: theme.palette.common.white,
    fontSize: '0.875rem',
    padding: '8px 12px',
    borderRadius: '4px'
  },
  '& .MuiTooltip-arrow': {
    color: theme.palette.mode === 'dark'
      ? theme.palette.grey[900]
      : theme.palette.grey[700]
  }
}));

const Tooltip: React.FC<TooltipProps> = ({
  children,
  content,
  placement = 'top',
  arrow = true,
  ...props
}) => {
  return (
    <StyledTooltip
      title={content}
      placement={placement}
      arrow={arrow}
      {...props}
    >
      {children}
    </StyledTooltip>
  );
};

Tooltip.displayName = 'Tooltip';

export { Tooltip, TooltipProps };

undefined.displayName = 'undefined';