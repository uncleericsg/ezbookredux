import { Tag } from 'lucide-react';
import { type FC , HTMLAttributes } from 'react';

export type FC , HTMLAttributes } from 'react';

export type VisitStatus;

export interface ServiceVisitLabelProps;


;

interface ServiceVisitLabelProps extends HTMLAttributes<HTMLDivElement> {
  visitNumber: number;
  status: VisitStatus;
};

ServiceVisitLabel.displayName = 'ServiceVisitLabel';
const getSuffix = (num: number): string => {
  const suffixes = ['ST', 'ND', 'RD', 'TH'];
  return num <= 3 ? suffixes[num - 1] : suffixes[3];
};

const getStatusColor = (status: VisitStatus): string => {
  switch (status) {
    case 'completed':
      return 'text-green-400 bg-green-500/10 border-green-500/20';
    case 'scheduled':
      return 'text-blue-400 bg-blue-500/10 border-blue-500/20';
    case 'cancelled':
      return 'text-red-400 bg-red-500/10 border-red-500/20';
    default:
      return 'text-gray-400 bg-gray-500/10 border-gray-500/20';
  }
};

const ServiceVisitLabel: FC<ServiceVisitLabelProps> = ({ 
  visitNumber,
  status,
  className = '',
  ...props
}) => {
  return (
    <div 
      className={`inline-flex items-center space-x-2 px-3 py-1 rounded-full border ${getStatusColor(status)} ${className}`}
      {...props}
    >
      <Tag className="h-4 w-4" aria-hidden="true" />
      <span className="text-sm font-medium">
        #{visitNumber}
        <sup>{getSuffix(visitNumber)}</sup> VISIT
      </span>
    </div>
  );

getSuffix.displayName = 'getSuffix';
};
export { ServiceVisitLabelProps, ServiceVisitLabel };

undefined.displayName = 'undefined';