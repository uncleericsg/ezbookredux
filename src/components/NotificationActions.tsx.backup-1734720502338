import { Check, Trash2 } from 'lucide-react';
import React from 'react';

import { cn } from '@/lib/utils';

export interface NotificationActionsProps;





/**
 * NotificationActions component for managing bulk notification actions
 * 
 * @example
 * ```tsx
 * <NotificationActions
 *   notificationCount={5}
 *   onMarkAllRead={() => handleMarkAllRead()}
 *   onDeleteAll={() => handleDeleteAll()}
 * />
 * ```
 */
interface NotificationActionsProps {
  /** Number of notifications */
  notificationCount: number;
  /** Callback when all notifications are marked as read */
  onMarkAllRead?: () => void;
  /** Callback when all notifications are deleted */
  onDeleteAll?: () => void;
  /** Optional className for styling */
  className?: string;
}

const NotificationActions: React.FC<NotificationActionsProps> = ({
  onMarkAllRead,
  onDeleteAll,
  notificationCount,
  className
}) => {
  // Don't render if no notifications
  if (notificationCount === 0) {
    return null;
  }

  return (
    <div className={cn('flex justify-end space-x-2', className)} role="group" aria-label="Notification actions">
      {onMarkAllRead && (
        <button
          onClick={onMarkAllRead}
          className={cn(
            'inline-flex items-center rounded-md border border-transparent bg-blue-600 px-3 py-2',
            'text-sm font-medium leading-4 text-white',
            'transition-colors duration-200',
            'hover:bg-blue-700',
            'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2'
          )}
          aria-label="Mark all notifications as read"
        >
          <Check className="mr-2 h-4 w-4" aria-hidden="true" />
          Mark all read
        </button>
      )}
      {onDeleteAll && (
        <button
          onClick={onDeleteAll}
          className={cn(
            'inline-flex items-center rounded-md border border-transparent bg-red-600 px-3 py-2',
            'text-sm font-medium leading-4 text-white',
            'transition-colors duration-200',
            'hover:bg-red-700',
            'focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2'
          )}
          aria-label="Delete all notifications"
        >
          <Trash2 className="mr-2 h-4 w-4" aria-hidden="true" />
          Clear all
        </button>
      )}
    </div>
  );
};

// Set display name for debugging
NotificationActions.displayName = 'NotificationActions';
export { NotificationActionsProps, NotificationActions };

undefined.displayName = 'undefined';