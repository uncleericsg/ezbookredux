import { cva, type VariantProps } from 'class-variance-authority';
import React from 'react';

import { cn } from '@/lib/utils';

export type VariantProps;
export type AlertProps;

export type VariantProps;
export type AlertProps;

export type VariantProps;
export type AlertProps;

export type VariantProps;
export type AlertProps;

// Export variants and types at the top
export const alertVariants = cva(
  'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',
  {
    variants: {
      variant: {
        default: 'bg-background text-foreground',
        destructive:
          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',
        success:
          'border-green-500/50 text-green-700 dark:border-green-500 [&>svg]:text-green-500',
        warning:
          'border-yellow-500/50 text-yellow-700 dark:border-yellow-500 [&>svg]:text-yellow-500',
      },
    },
    defaultVariants: {
      variant: 'default',
    },
  }
);

export type AlertProps = React.HTMLAttributes<HTMLDivElement> & 
  VariantProps<typeof alertVariants> & {
    /** Title of the alert */
    title?: string;
    /** Description of the alert */
    description?: string;
    /** Icon to display in the alert */
    icon?: React.ReactNode;
  };

/**
 * Alert component for displaying messages with different variants
 */
const Alert = React.forwardRef<HTMLDivElement, AlertProps>(
  ({ className, variant, title, description, icon, ...props }, ref) => (
    <div
      ref={ref}
      role="alert"
      aria-label={title}
      aria-describedby={description}
      className={cn(alertVariants({ variant }), className)}
      {...props}
    >
      {icon}
      {title && <h5 className="mb-1 font-medium leading-none tracking-tight">{title}</h5>}
      {description && <div className="text-sm [&_p]:leading-relaxed">{description}</div>}
    </div>
  )
);

// Add displayName
Alert.displayName = 'Alert';

// Both named and default exports at the bottom
export { Alert };


undefined.displayName = 'undefined';