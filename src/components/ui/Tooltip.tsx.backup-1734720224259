'use client';

import * as TooltipPrimitive from '@radix-ui/react-tooltip';
import * as React from 'react';

import { cn } from '@/lib/utils';

export type TooltipProps;
export type TooltipContentProps;

// Export types at the top
export type TooltipProps = React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Root> & {
  /** Content to be displayed in the tooltip */
  content: React.ReactNode;
  /** The element that triggers the tooltip */
  children: React.ReactNode;
  /** Delay before showing the tooltip (in ms) */
  delayDuration?: number;
  /** Whether the tooltip should skip the delay when showing */
  disableHoverableContent?: boolean;
};

export type TooltipContentProps = React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content> & {
  /** Additional class names */
  className?: string;
  /** Distance between trigger and content */
  sideOffset?: number;
  /** Alignment relative to trigger */
  align?: 'start' | 'center' | 'end';
};

/**
 * Tooltip components for displaying floating content
 * @example
 * <TooltipProvider>
 *   <Tooltip>
 *     <TooltipTrigger>Hover me</TooltipTrigger>
 *     <TooltipContent>
 *       Tooltip content
 *     </TooltipContent>
 *   </Tooltip>
 * </TooltipProvider>
 */

/**
 * Tooltip provider component
 * Must wrap all tooltip instances
 */
const TooltipProvider = TooltipPrimitive.Provider;
TooltipProvider.displayName = 'TooltipProvider';

/**
 * Root tooltip component
 */
const Tooltip = TooltipPrimitive.Root;
Tooltip.displayName = 'Tooltip';

/**
 * Trigger element for the tooltip
 */
const TooltipTrigger = TooltipPrimitive.Trigger;
TooltipTrigger.displayName = 'TooltipTrigger';

/**
 * Content component for the tooltip
 */
const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  TooltipContentProps
>(({ className, sideOffset = 4, ...props }, ref) => (
  <TooltipPrimitive.Content
    ref={ref}
    sideOffset={sideOffset}
    className={cn(
      'z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',
      className
    )}
    {...props}
  />
));

TooltipContent.displayName = 'TooltipContent';

// Both named and default exports at the bottom
export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };

