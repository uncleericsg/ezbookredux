import { Mail, Phone, MapPin, LogOut, AlertTriangle } from 'lucide-react';
import type { FC, HTMLAttributes, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { toast } from 'sonner';

import { useAppDispatch, useAppSelector } from '../store';
import { resetAuth } from '../store/slices/authSlice';
import { setUser } from '../store/slices/userSlice';

import ServiceHistory from './ServiceHistory';

export interface UserProfileProps;

interface UserProfileProps extends HTMLAttributes<HTMLDivElement> {
  className?: string;
}

export const UserProfile: FC<UserProfileProps> = ({ className }) => {
  const navigate = useNavigate();
  const dispatch = useAppDispatch();
  const { currentUser } = useAppSelector((state) => state.user);
  const { loading } = useAppSelector((state) => state.auth);
  const [activeTab, setActiveTab] = useState('overview');

  const handleLogout = async (): Promise<void> => {
    try {
      dispatch(resetAuth());
      dispatch(setUser(null));
      window.localStorage.removeItem('auth_token');
      window.localStorage.removeItem('user_data');
      toast.success('Logged out successfully');
      navigate('/login');
    } catch (error) {
      console.error('Logout error:', error);
      toast.error('Failed to logout. Please try again.');
    }
  };

  if (!currentUser) {
    return (
      <div className="flex h-screen items-center justify-center">
        <div className="text-center">
          <AlertTriangle className="mx-auto h-12 w-12 text-yellow-400" aria-hidden="true" />
          <h3 className="mt-2 text-sm font-semibold text-gray-200">Not Logged In</h3>
          <p className="mt-1 text-sm text-gray-500">Please log in to view your profile.</p>
          <div className="mt-6">
            <button
              type="button"
              onClick={() => navigate('/login')}
              className="inline-flex items-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white hover:bg-indigo-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
            >
              Go to Login
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className={`mx-auto max-w-6xl space-y-6 px-4 sm:px-6 lg:px-8 ${className ?? ''}`}>
      {/* Profile Header */}
      <div className="rounded-lg bg-gray-800 p-4 sm:p-6">
        <div className="flex items-center justify-between">
          <div>
            <h2 className="text-2xl font-bold text-white">
              {currentUser.firstName} {currentUser.lastName}
            </h2>
            <div className="mt-2 flex flex-col space-y-2 text-sm text-gray-400">
              <div className="flex items-center">
                <Mail className="mr-2 h-4 w-4" aria-hidden="true" />
                <span>{currentUser.email}</span>
              </div>
              <div className="flex items-center">
                <Phone className="mr-2 h-4 w-4" aria-hidden="true" />
                <span>{currentUser.phone}</span>
              </div>
              <div className="flex items-center">
                <MapPin className="mr-2 h-4 w-4" aria-hidden="true" />
                <span>
                  {currentUser.unitNumber} {currentUser.address} {currentUser.condoName}{' '}
                  {currentUser.lobbyTower}
                </span>
              </div>
            </div>
          </div>
          <div className="mt-4 sm:mt-0">
            <button
              type="button"
              onClick={handleLogout}
              className="inline-flex items-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2"
              disabled={loading}
            >
              <LogOut className="mr-2 h-4 w-4" aria-hidden="true" />
              {loading ? 'Logging out...' : 'Logout'}
            </button>
          </div>
        </div>
      </div>

      {/* Navigation Tabs */}
      <div className="border-b border-gray-700">
        <nav className="-mb-px flex space-x-8" aria-label="Profile navigation">
          {['overview', 'history'].map((tab) => (
            <button
              key={tab}
              type="button"
              onClick={() => setActiveTab(tab)}
              className={`
                whitespace-nowrap border-b-2 px-1 pb-4 text-sm font-medium
                ${
                  activeTab === tab
                    ? 'border-indigo-500 text-indigo-400'
                    : 'border-transparent text-gray-400 hover:border-gray-300 hover:text-gray-300'
                }
              `}
              aria-current={activeTab === tab ? 'page' : undefined}
            >
              {tab.charAt(0).toUpperCase() + tab.slice(1)}
            </button>
          ))}
        </nav>
      </div>

      {/* Tab Content */}
      <div className="mt-6">
        {activeTab === 'overview' && (
          <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
            {/* Service Status */}
            <div className="rounded-lg border border-gray-700 bg-gray-800 p-6">
              <h3 className="text-lg font-medium text-white">Service Status</h3>
              <dl className="mt-4 space-y-4">
                {currentUser.lastServiceDate && (
                  <div>
                    <dt className="text-sm font-medium text-gray-400">Last Service</dt>
                    <dd className="mt-1 text-sm text-white">
                      {new Date(currentUser.lastServiceDate).toLocaleDateString()}
                    </dd>
                  </div>
                )}
                {currentUser.nextServiceDate && (
                  <div>
                    <dt className="text-sm font-medium text-gray-400">Next Service</dt>
                    <dd className="mt-1 text-sm text-white">
                      {new Date(currentUser.nextServiceDate).toLocaleDateString()}
                    </dd>
                  </div>
                )}
              </dl>
            </div>

            {/* Important Notes */}
            <div className="rounded-lg border border-gray-700 bg-gray-800 p-6">
              <div className="flex items-start space-x-3">
                <AlertTriangle className="mt-1 h-5 w-5 text-yellow-400" aria-hidden="true" />
                <div>
                  <h3 className="mb-2 font-medium">Important Notes</h3>
                  <ul className="space-y-2 text-sm text-gray-400">
                    <li>• Sign up for AMC package for most savings</li>
                    <li>• Keep your address information up to date</li>
                    <li>• Contact us if you need any support</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'history' && (
          <div className="rounded-lg border border-gray-700 bg-gray-800 p-6">
            <ServiceHistory userId={currentUser.id} limit={10} />
          </div>
        )}
      </div>
    </div>
  );
};

UserProfile.displayName = 'UserProfile';
