'use client';

import { motion } from 'framer-motion';
import { Calendar, Filter, Search, Settings } from 'lucide-react';
import type { FC } from 'react';

import { Button } from '@/components/ui/Button';
import { Card } from '@/components/ui/Card';
import { Input } from '@/components/ui/Input';
import { Select } from '@/components/ui/Select';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/Table';

export interface BookingManagerProps;

export interface BookingManagerProps;

const bookings = [
  {
    id: 'BK001',
    customer: 'John Smith',
    service: 'AC Maintenance',
    date: '2024-01-20',
    time: '10:00 AM',
    status: 'Confirmed'
  },
  {
    id: 'BK002',
    customer: 'Sarah Johnson',
    service: 'AC Installation',
    date: '2024-01-21',
    time: '2:30 PM',
    status: 'Pending'
  };


BookingManager.displayName = 'BookingManager';
] as const;

export interface BookingManagerProps {
  className?: string;
}

export const BookingManager: FC<BookingManagerProps> = ({ className }) => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      className={`space-y-6 ${className ?? ''}`}
    >
      <div className="mb-6 flex items-center space-x-3">
        <Calendar className="h-6 w-6 text-blue-400" />
        <h2 className="text-xl font-semibold">Booking Manager</h2>
      </div>

      <Card className="bg-gray-800 p-6">
        <div className="space-y-6">
          {/* Search and Filter Bar */}
          <div className="flex flex-wrap items-center justify-between gap-4">
            <div className="flex flex-1 items-center gap-2">
              <div className="relative flex-1">
                <Search className="absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-gray-400" />
                <Input
                  type="search"
                  placeholder="Search bookings..."
                  className="pl-9"
                />
              </div>
              <Button
                variant="outline"
                size="icon"
                className="shrink-0"
              >
                <Filter className="h-4 w-4" />
              </Button>
              <Button
                variant="outline"
                size="icon"
                className="shrink-0"
              >
                <Settings className="h-4 w-4" />
              </Button>
            </div>
            <Select defaultValue="all">
              <option value="all">All Bookings</option>
              <option value="confirmed">Confirmed</option>
              <option value="pending">Pending</option>
              <option value="cancelled">Cancelled</option>
            </Select>
          </div>

          {/* Bookings Table */}
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Booking ID</TableHead>
                <TableHead>Customer</TableHead>
                <TableHead>Service</TableHead>
                <TableHead>Date</TableHead>
                <TableHead>Time</TableHead>
                <TableHead>Status</TableHead>
                <TableHead className="w-[100px]">Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {bookings.map((booking) => (
                <TableRow key={booking.id}>
                  <TableCell>{booking.id}</TableCell>
                  <TableCell>{booking.customer}</TableCell>
                  <TableCell>{booking.service}</TableCell>
                  <TableCell>{booking.date}</TableCell>
                  <TableCell>{booking.time}</TableCell>
                  <TableCell>
                    <span className={`inline-flex rounded-full px-2 py-1 text-xs font-medium ${
                      booking.status === 'Confirmed'
                        ? 'bg-green-500/10 text-green-500'
                        : 'bg-yellow-500/10 text-yellow-500'
                    }`}>
                      {booking.status}
                    </span>
                  </TableCell>
                  <TableCell>
                    <Button
                      variant="ghost"
                      size="sm"
                      className="h-8"
                    >
                      View
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>
      </Card>
    </motion.div>
  );
};



export { BookingManager, BookingManagerProps };