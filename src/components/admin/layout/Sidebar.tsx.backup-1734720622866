import { motion } from 'framer-motion';
import {
  Bell,
  Building2,
  Calendar,
  ChevronLeft,
  ChevronRight,
  FileText,
  LayoutDashboard,
  Settings,
  Users
} from 'lucide-react';
import Link from 'next/link';
import { usePathname } from 'next/navigation';
import type { FC, ElementType } from 'react';

import { Button } from '@/components/ui/Button';
import { cn } from '@/lib/utils';

export interface SidebarProps;

export interface SidebarItem;


  onClose: () => void;
};

Sidebar.displayName = 'Sidebar';

  icon: ElementType;
  href: string;
}

const sidebarItems: SidebarItem[] = [
  {
    title: 'Dashboard',
    icon: LayoutDashboard,
    href: '/admin/dashboard'
  },
  {
    title: 'Users',
    icon: Users,
    href: '/admin/users'
  },
  {
    title: 'Bookings',
    icon: Calendar,
    href: '/admin/bookings'
  },
  {
    title: 'Properties',
    icon: Building2,
    href: '/admin/properties'
  },
  {
    title: 'Reports',
    icon: FileText,
    href: '/admin/reports'
  },
  {
    title: 'Notifications',
    icon: Bell,
    href: '/admin/notifications'
  },
  {
    title: 'Settings',
    icon: Settings,
    href: '/admin/settings'
  }
];

export const Sidebar: FC<SidebarProps> = ({ open, onClose }) => {
  const pathname = usePathname();

  return (
    <>
      {open && (
        <div
          className="fixed inset-0 z-40 bg-black/50 lg:hidden"
          onClick={onClose}
          role="presentation"
        />
      )}

      <motion.aside
        initial={{ x: -256 }}
        animate={{ x: open ? 0 : -256 }}
        transition={{ duration: 0.2 }}
        className={cn(
          'fixed bottom-0 left-0 top-0 z-50 flex w-64 flex-col border-r border-gray-800 bg-gray-900',
          !open && 'hidden lg:flex'
        )}
      >
        <div className="p-6">
          <h1 className="text-xl font-bold text-white">iAircon Admin</h1>
        </div>

        <nav className="flex-1 space-y-2 px-4">
          {sidebarItems.map((item) => {
            const isActive = pathname === item.href;
            const Icon = item.icon;

            return (
              <Link
                key={item.href}
                href={item.href}
                className={cn(
                  'flex items-center gap-3 rounded-lg px-3 py-2 transition-colors hover:bg-gray-800',
                  isActive ? 'bg-gray-800 text-white' : 'text-gray-400'
                )}
              >
                <Icon className="h-5 w-5" />
                <span>{item.title}</span>
              </Link>
            );
          })}
        </nav>

        <div className="p-4">
          <Button
            variant="ghost"
            className="w-full justify-between"
            onClick={onClose}
          >
            <span>Collapse</span>
            {open ? (
              <ChevronLeft className="h-4 w-4" />
            ) : (
              <ChevronRight className="h-4 w-4" />
            )}
          </Button>
        </div>
      </motion.aside>
    </>
  );
};

export { Sidebar, SidebarProps, SidebarItem };
undefined.displayName = 'undefined';