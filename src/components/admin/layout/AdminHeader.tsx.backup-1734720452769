import {
  Menu as MenuIcon,
  Notifications as NotificationsIcon
} from '@mui/icons-material';
import {
  AppBar,
  Toolbar,
  IconButton,
  Typography,
  Box,
  Avatar,
  Badge,
  useTheme
} from '@mui/material';
import type { FC } from 'react';
import { useNavigate } from 'react-router-dom';

import { useAppSelector } from '../../../store';

export interface AdminHeaderProps;

export interface AdminHeaderProps;

export interface AdminHeaderProps;

export interface AdminHeaderProps;

export interface AdminHeaderProps {
  drawerOpen: boolean;
  toggleDrawer: () => void;
};


AdminHeader.displayName = 'AdminHeader';
const AdminHeader: FC<AdminHeaderProps> = ({
  drawerOpen,
  toggleDrawer
}) => {
  const navigate = useNavigate();
  const user = useAppSelector((state) => state.auth.user);
  const _theme = useTheme();

  return (
    <AppBar
      position="fixed"
      sx={{
        width: { sm: `calc(100% - ${drawerOpen ? 240 : 0}px)` },
        ml: { sm: drawerOpen ? 240 : 0 }
      }}
    >
      <Toolbar
        variant="dense"
        sx={{
          minHeight: 64
        }}
      >
        <IconButton
          edge="start"
          onClick={toggleDrawer}
          sx={{ mr: 2 }}
        >
          <MenuIcon />
        </IconButton>
        <Typography
          variant="h6"
          noWrap
          component="div"
          sx={{ flexGrow: 1 }}
        >
          Admin Dashboard
        </Typography>
        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
          <IconButton>
            <Badge badgeContent={4} color="error">
              <NotificationsIcon />
            </Badge>
          </IconButton>
          <Avatar
            alt={user?.name || 'User'}
            src={user?.avatar}
            sx={{
              width: 40,
              height: 40,
              cursor: 'pointer'
            }}
            onClick={() => navigate('/admin/profile')}
          >
            {!user?.avatar && (user?.name?.[0] || 'U')}
          </Avatar>
        </Box>
      </Toolbar>
    </AppBar>
  );
};



export { AdminHeader, AdminHeaderProps };
undefined.displayName = 'undefined';
