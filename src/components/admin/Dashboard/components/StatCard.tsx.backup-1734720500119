import { TrendingUp as TrendingUpIcon, TrendingDown as TrendingDownIcon } from '@mui/icons-material';
import {
  Card,
  CardContent,
  Box,
  Typography,
  useTheme
} from '@mui/material';
import { motion } from 'framer-motion';
import React from 'react';

export interface StatCardProps;






  value: number;
  trend: number;
  icon: React.ElementType;
  color: string;
  format?: 'number' | 'currency' | 'percentage';
};


StatCard.displayName = 'StatCard';
const formatValue = (value: number, format?: 'number' | 'currency' | 'percentage'): string => {
  switch (format) {
    case 'currency':
      return new Intl.NumberFormat('en-SG', {
        style: 'currency',
        currency: 'SGD',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
      }).format(value);
    case 'percentage':
      return `${value.toFixed(1)}%`;
    default:
      return new Intl.NumberFormat('en-SG').format(value);
  }
};

const StatCard: React.FC<StatCardProps> = ({
  title,
  value,
  trend,
  icon: Icon,
  color,
  format
}) => {
  const theme = useTheme();
  const isPositiveTrend = trend >= 0;

  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.3 }}
    >
      <Card
        sx={{
          height: '100%',
          backgroundColor: theme.palette.background.paper,
          transition: 'transform 0.2s ease-in-out',
          '&:hover': {
            transform: 'translateY(-4px)'
          }
        }}
      >
        <CardContent>
          <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
            <Box
              sx={{
                backgroundColor: `${color}15`,
                borderRadius: 1,
                p: 1,
                mr: 2,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center'
              }}
            >
              <Icon sx={{ color }} />
            </Box>
            <Typography variant="h6" component="div" sx={{ color: theme.palette.text.primary }}>
              {title}
            </Typography>
          </Box>
          <motion.div
            initial={{ scale: 0.95 }}
            animate={{ scale: 1 }}
            transition={{ duration: 0.3, delay: 0.1 }}
          >
            <Typography variant="h4" component="div" sx={{ mb: 1, color: theme.palette.text.primary }}>
              {formatValue(value, format)}
            </Typography>
          </motion.div>
          <Box sx={{ display: 'flex', alignItems: 'center' }}>
            <Box
              sx={{
                display: 'flex',
                alignItems: 'center',
                color: isPositiveTrend ? theme.palette.success.main : theme.palette.error.main,
                mr: 1
              }}
            >
              {isPositiveTrend ? <TrendingUpIcon /> : <TrendingDownIcon />}
              <Typography variant="body2" component="span" sx={{ ml: 0.5 }}>
                {Math.abs(trend)}%
              </Typography>
            </Box>
            <Typography variant="body2" color="text.secondary">
              from last {format === 'currency' ? 'month' : 'period'}
            </Typography>
          </Box>
        </CardContent>
      </Card>
    </motion.div>
  );

formatValue.displayName = 'formatValue';
};



export { StatCard, StatCardProps };
undefined.displayName = 'undefined';
