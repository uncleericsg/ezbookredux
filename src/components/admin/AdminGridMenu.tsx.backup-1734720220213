'use client';

import classNames from 'classnames';
import { motion } from 'framer-motion';
import React from 'react';

import { tabs } from './AdminNav';

export interface AdminGridMenuProps;

export interface AdminGridMenuProps extends React.HTMLAttributes<HTMLDivElement> {
  activeTab: number;
  onTabChange: (index: number) => void;
}

const AdminGridMenu: React.FC<AdminGridMenuProps> = ({
  activeTab,
  onTabChange,
  className,
  ...props
}) => {
  return (
    <div 
      className={classNames(
        "grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 lg:grid-cols-8 xl:grid-cols-10 2xl:grid-cols-12",
        className
      )}
      {...props}
    >
      {tabs.map((_, index) => {
        const Icon = tabs[index].icon;
        return (
          <motion.button
            key={tabs[index].id}
            onClick={() => onTabChange(index)}
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
            className={classNames(
              'flex min-h-[80px] flex-col items-center justify-center rounded-lg p-3 transition-colors',
              'hover:bg-gray-100 dark:hover:bg-gray-800',
              activeTab === index ? 'bg-gray-100 dark:bg-gray-800' : 'bg-transparent'
            )}
            aria-label={tabs[index].label}
            role="tab"
            aria-selected={activeTab === index}
            tabIndex={0}
          >
            <Icon className="mb-1.5 h-5 w-5" />
            <span className="text-xs font-medium">{tabs[index].label}</span>
          </motion.button>
        );
      })}
    </div>
  );
};

AdminGridMenu.displayName = 'AdminGridMenu';

export { AdminGridMenu };
