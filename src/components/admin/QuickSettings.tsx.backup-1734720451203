'use client';

import React, { memo } from 'react';

import type { AppSettings } from '../../types/appSettings';

export interface QuickSettingsProps;

export interface QuickSettingsProps;

export interface QuickSettingsProps;

export interface QuickSettingsProps;

export interface QuickSettingsProps extends React.HTMLAttributes<HTMLDivElement> {
  settings: AppSettings;
  onSettingsChange: (settings: AppSettings) => void;
}

const OPTIONS = [
  { value: 10, label: '10 minutes' },
  { value: 15, label: '15 minutes' },
  { value: 20, label: '20 minutes' },
  { value: 30, label: '30 minutes' },
  { value: 45, label: '45 minutes' },
  { value: 60, label: '1 hour' }
] as const;

export const QuickSettings = memo(({ settings, onSettingsChange, className, ...props }: QuickSettingsProps) => {
  return (
    <div className={`${className} bg-gray-800 rounded-lg p-6 border border-gray-700`} {...props}>
      <h3 className="text-lg font-medium mb-4">Quick Settings</h3>
      <div className="space-y-4">
        <div>
          <label className="block text-sm font-medium text-gray-300 mb-2">
            Default Service Interval
          </label>
          <select
            value={settings.defaultServiceInterval}
            onChange={(e) => {
              onSettingsChange({
                ...settings,
                defaultServiceInterval: Number(e.target.value)
              });
            }}
            className="w-full bg-gray-700 border border-gray-600 rounded-md py-2 px-3 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
          >
            {OPTIONS.map((option) => (
              <option key={option.value} value={option.value}>
                {option.label}
              </option>
            ))}
          </select>
        </div>
      </div>
    </div>
  );
});

QuickSettings.displayName = 'QuickSettings';



undefined.displayName = 'undefined';