'use client';

import { type FC } from 'react';
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
  BarChart,
  Bar
} from 'recharts';

import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/Dialog';

import type { ServiceContract } from '@/types/contracts';

// Types
interface ContractAnalyticsProps {
  contracts: ServiceContract[];
  isOpen: boolean;
  onClose: () => void;
}

const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'] as const;

const ContractAnalytics: FC<ContractAnalyticsProps> = ({
  contracts = [],
  isOpen,
  onClose,
}) => {
  const contractsByType = (contracts || []).reduce((acc, contract) => {
    acc[contract.contractType] = (acc[contract.contractType] || 0) + 1;
    return acc;
  }, {} as Record<string, number>);

  const data = Object.entries(contractsByType).map(([name, value]) => ({
    name,
    value,
  }));

  const monthlyData = Array.from({ length: 12 }, (_, i) => ({
    name: new Date(2024, i).toLocaleString('default', { month: 'short' }),
    completed: Math.round(Math.random() * 100), // Mock data
    scheduled: Math.round(Math.random() * 50), // Mock data
  }));

  if (!isOpen) {
    return null;
  }

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl">
        <DialogHeader>
          <DialogTitle>Contract Analytics</DialogTitle>
        </DialogHeader>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="p-4 border rounded-lg">
            <h3 className="text-lg font-semibold mb-4">Service Completion</h3>
            <div className="h-[300px]">
              <ResponsiveContainer width="100%" height="100%">
                <LineChart data={monthlyData}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="name" />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Line
                    type="monotone"
                    dataKey="completed"
                    stroke="#8884d8"
                    activeDot={{ r: 8 }}
                  />
                  <Line type="monotone" dataKey="scheduled" stroke="#82ca9d" />
                </LineChart>
              </ResponsiveContainer>
            </div>
          </div>

          <div className="p-4 border rounded-lg">
            <h3 className="text-lg font-semibold mb-4">Contract Distribution</h3>
            <div className="h-[300px]">
              <ResponsiveContainer width="100%" height="100%">
                <BarChart data={data}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="name" />
                  <YAxis />
                  <Tooltip />
                  <Legend />
                  <Bar dataKey="value" fill="#8884d8" />
                </BarChart>
              </ResponsiveContainer>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

ContractAnalytics.displayName = 'ContractAnalytics';

export { ContractAnalytics };
export type { ContractAnalyticsProps };