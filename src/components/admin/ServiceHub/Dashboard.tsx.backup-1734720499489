import React from 'react';

export interface DashboardProps;





'use client';
// Types

  Dashboard.displayName = 'Dashboard';
  ];
  const mockAnalytics: AnalyticsData = {
  renewalRate: 85,
  customerSatisfaction: 4.5,
  serviceCompletionRate: 92,
  averageResponseTime: '2.5 hours',
  revenueMetrics: {
  totalRevenue: 150000,
  monthlyGrowth: 5.2,
  yearlyProjection: 1800000
}
  };
  className?: string;
}

const Dashboard: FC<DashboardProps> = ({classname}) => {
  const [isbatchoperationsopen, setIsBatchOperationsOpen] = useState(false);
  const handlesendnotifications = async (data: { contractIds: string[]; message: string }): Promise<void> => {
    try {
      console.log('sendingnotifications:   ', data);
    } catch (error) {
      console.error('failedtosendnotifications:   ', error);
    }
  };
  return (
    <div className={`space-y-6 ${className ?? ''}`}>
      <div className="mb-6 flex items-center justify-between">
        <h1 className="text-2xl font-semibold text-gray-900 dark:text-white">
          Service Hub Dashboard
        </h1>
        <Button
          onClick={() => setIsBatchOperationsOpen(true)}
          className="gap-2 bg-blue-600 text-white hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600"
          size="sm"
        >
          <Send className="h-4 w-4" />
          Batch Operations
        </Button>
      </div>
      <Tabs defaultValue="monitoring" className="space-y-6">
        <TabsList className="bg-gray-100 dark:bg-gray-800">
          <TabsTrigger
            value="monitoring"
            className="text-gray-700 dark:text-gray-200"
          >
            Contract Monitoring
          </TabsTrigger>
          <TabsTrigger
            value="analytics"
            className="text-gray-700 dark:text-gray-200"
          >
            Analytics
          </TabsTrigger>
        </TabsList>
        <TabsContent value="monitoring" className="mt-6">
          <ContractMonitoring
            contracts={mockContracts}
            serviceHistory={{}}
            onBlockContract={async (id:    string, reason:    string) => {
              console.log('blockingcontract:   ', id, reason);
            }}
            onUnblockContract={async (id:    string) => {
              console.log('unblockingcontract:   ', id);
            }}
            onSendReminder={async (id:    string) => {
              console.log('sendingreminder:   ', id);
            }}
            onScheduleService={async (id:    string) => {
              console.log('schedulingservice:   ', id);
            }}
          />
        </TabsContent>
        <TabsContent value="analytics" className="mt-6">
          <ContractAnalytics
            contracts={mockContracts}
            analytics={mockAnalytics}
            renewalRate={mockAnalytics.renewalRate}
            customerSatisfaction={mockAnalytics.customerSatisfaction}
            serviceCompletionRate={mockAnalytics.serviceCompletionRate}
            averageResponseTime={mockAnalytics.averageResponseTime}
            revenueMetrics={mockAnalytics.revenueMetrics}
          />
        </TabsContent>
      </Tabs>
      <BatchOperations
        contracts={mockContracts}
        isOpen={isBatchOperationsOpen}
        onClose={() => setIsBatchOperationsOpen(false)}
        onSendNotifications={handleSendNotifications}
      />
    </div>
  );
};
undefined.displayName = 'undefined';
