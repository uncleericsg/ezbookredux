'use client';

import { Eye } from 'lucide-react';
import React, { useState, memo } from 'react';

import { useAdminView } from '@/contexts/AdminViewContext';
import { useAuth } from '@/contexts/AuthContext';
import { cn } from '@/lib/utils';

import { ViewSelector } from './ViewSelector';

export interface AdminViewToggleProps;

export interface AdminViewToggleProps;

export interface AdminViewToggleProps;

declare const process: {
  env: {
    NODE_ENV: 'development' | 'production' | 'test';
  };
};

export interface AdminViewToggleProps extends React.HTMLAttributes<HTMLDivElement> {}

const AdminViewToggle = memo(({ className, ...props }: AdminViewToggleProps) => {
  const [isOpen, setIsOpen] = useState(false);
  const { user } = useAuth();
  const { currentView, setCurrentView, resetView } = useAdminView();

  // Only show in development mode and for admin users in production
  if (process.env.NODE_ENV === 'production' && user?.role !== 'admin') {
    return null;
  }

  const handleClose = () => {
    setIsOpen(false);
    if (process.env.NODE_ENV === 'production') {
      resetView();
    }
  };

  return (
    <div className={cn('fixed bottom-4 right-4 z-50', className)} {...props}>
      <button
        onClick={() => setIsOpen(true)}
        className={cn(
          'rounded-lg bg-gray-900 px-4 py-2 text-white shadow-lg',
          'transition-colors duration-200',
          'hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500'
        )}
        aria-expanded={isOpen}
      >
        <div className="flex items-center space-x-2">
          <Eye className="h-5 w-5" />
          <span>View As: {currentView}</span>
        </div>
      </button>

      {isOpen && (
        <ViewSelector
          currentView={currentView}
          onViewChange={setCurrentView}
          onClose={handleClose}
        />
      )}
    </div>
  );
});

AdminViewToggle.displayName = 'AdminViewToggle';

