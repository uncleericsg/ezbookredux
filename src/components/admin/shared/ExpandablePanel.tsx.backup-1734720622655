'use client';

import { AnimatePresence, motion } from 'framer-motion';
import { Maximize2, Minimize2 } from 'lucide-react';
import type { FC, ReactNode, useState } from 'react';

import { Button } from '@/components/ui/Button';
import { cn } from '@/lib/utils';

export interface ExpandablePanelProps;


  children: ReactNode;
  className?: string;
};

ExpandablePanel.displayName = 'ExpandablePanel';
export const ExpandablePanel: FC<ExpandablePanelProps> = ({
  title,
  children,
  className
}) => {
  const [isExpanded, setIsExpanded] = useState(false);

  return (
    <motion.div
      layout
      className={cn(
        'overflow-hidden rounded-xl border border-gray-700/50 bg-gray-800/90 shadow-lg backdrop-blur-sm',
        isExpanded ? 'fixed inset-4 z-50' : 'relative w-full',
        className
      )}
      animate={{ opacity: 1 }}
      initial={{ opacity: 0 }}
      exit={{ opacity: 0 }}
      transition={{ duration: 0.2 }}
    >
      <div className="flex items-center justify-between border-b border-gray-700/50 px-6 py-4">
        <h2 className="text-lg font-semibold text-gray-100">{title}</h2>
        <Button
          variant="ghost"
          size="icon"
          onClick={() => setIsExpanded(!isExpanded)}
          className="text-gray-400 hover:text-white"
        >
          {isExpanded ? (
            <Minimize2 className="h-5 w-5" />
          ) : (
            <Maximize2 className="h-5 w-5" />
          )}
        </Button>
      </div>
      <AnimatePresence mode="wait">
        <motion.div
          key={isExpanded ? 'expanded' : 'collapsed'}
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.2 }}
          className={cn(
            'p-6',
            isExpanded ? 'h-[calc(100%-4rem)] overflow-auto' : 'h-full'
          )}
        >
          {children}
        </motion.div>
      </AnimatePresence>
    </motion.div>
  );
};

export { ExpandablePanel, ExpandablePanelProps };
undefined.displayName = 'undefined';