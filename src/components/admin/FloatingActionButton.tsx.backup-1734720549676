'use client';

import { motion, AnimatePresence } from 'framer-motion';
import { Plus, Users, Bell, Shield, MoreVertical } from 'lucide-react';
import React, { useState } from 'react';

export interface Action;

export interface FloatingActionButtonProps;


  label: string;
  onClick: (setIsOpen: (isOpen: boolean) => void) => void;
}

}

export const FloatingActionButton = ({
  actions = [
    {
      icon: Users,
      label: 'Add User',
      onClick: (setIsOpen) => {
        // Handle add user
        setIsOpen(false);
      },
    },
    {
      icon: Bell,
      label: 'Send Notification',
      onClick: (setIsOpen) => {
        // Handle send notification
        setIsOpen(false);
      },
    },
    {
      icon: Shield,
      label: 'Manage Permissions',
      onClick: (setIsOpen) => {
        // Handle manage permissions
        setIsOpen(false);
      },
    }
  ],
  className,
  ...props
}: FloatingActionButtonProps) => {
  const [isOpen, setIsOpen] = useState(false);

  const handleActionClick = (action: Action) => {
    action.onClick(setIsOpen);
  };

  return (
    <div className="fixed bottom-6 right-6 z-50" {...props}>
      <AnimatePresence>
        {isOpen && (
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 20 }}
            className="absolute bottom-16 right-0 mb-4 space-y-2"
          >
            {actions.map((action, index) => {
              const Icon = action.icon;
              return (
                <motion.button
                  key={action.label}
                  initial={{ opacity: 0, x: 20 }}
                  animate={{ opacity: 1, x: 0 }}
                  exit={{ opacity: 0, x: 20 }}
                  transition={{ delay: index * 0.1 }}
                  onClick={() => handleActionClick(action)}
                  className="flex items-center space-x-2 bg-gray-800 text-white px-4 py-2 rounded-lg shadow-lg hover:bg-gray-700"
                >
                  <Icon className="h-5 w-5" />
                  <span>{action.label}</span>
                </motion.button>
              );
            })}
          </motion.div>
        )}
      </AnimatePresence>
      <motion.button
        whileTap={{ scale: 0.95 }}
        onClick={() => setIsOpen(!isOpen)}
        className="bg-blue-600 hover:bg-blue-700 text-white p-4 rounded-full shadow-lg"
        style={{
          width: '48px',
          height: '48px',
          WebkitTapHighlightColor: 'transparent'
        }}
      >
        {isOpen ? (
          <MoreVertical className="h-6 w-6" />
        ) : (
          <Plus className="h-6 w-6" />
        )}
      </motion.button>
    </div>
  );
};

FloatingActionButton.displayName = 'FloatingActionButton';

undefined.displayName = 'undefined';