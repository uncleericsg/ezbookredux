'use client';

import classNames from 'classnames';
import { Users, Bell, Shield, BarChart3, Settings, Layout, ChevronLeft } from 'lucide-react';
import React, { memo } from 'react';

export interface Tab {
  id: string;
  icon: React.FC<{ className?: string }>;
  label: string;
}

export interface AdminTabsProps extends React.HTMLAttributes<HTMLDivElement> {
  activeTab: number;
  onTabChange: (index: number) => void;
  collapsed?: boolean;
  onToggleCollapse?: () => void;
}

export const tabs: Tab[] = [
  { id: 'users', icon: Users, label: 'Users' },
  { id: 'homepage', icon: Layout, label: 'Homepage' },
  { id: 'notifications', icon: Bell, label: 'Notifications' },
  { id: 'amc', icon: Shield, label: 'AMC' },
  { id: 'analytics', icon: BarChart3, label: 'Analytics' },
  { id: 'settings', icon: Settings, label: 'Settings' }
];

export const AdminTabs = memo<AdminTabsProps>(
  ({ activeTab, onTabChange, collapsed = false, onToggleCollapse, className, ...props }) => {
    return (
      <div className={classNames('flex h-full flex-col', className)} {...props}>
        <div className="border-b border-gray-700 p-4">
          <h1
            className={classNames(
              'font-bold transition-all duration-300',
              collapsed ? 'text-center text-xl' : 'text-2xl'
            )}
          >
            {collapsed ? 'A' : 'Admin'}
          </h1>
        </div>
        <div className="flex-1 space-y-2 py-4">
          {tabs.map((tab, index) => {
            const Icon = tab.icon;
            return (
              <button
                key={tab.id}
                onClick={() => onTabChange(index)}
                className={classNames(
                  'mx-2 flex w-full items-center rounded-lg px-4 py-3 text-sm font-medium transition-colors',
                  activeTab === index
                    ? 'bg-blue-500/10 text-blue-500'
                    : 'text-gray-400 hover:bg-gray-800 hover:text-gray-100'
                )}
                aria-label={tab.label}
                role="tab"
                aria-selected={activeTab === index}
              >
                <Icon className="h-5 w-5" />
                {!collapsed && <span className="ml-3">{tab.label}</span>}
              </button>
            );
          })}
        </div>
        {onToggleCollapse && (
          <button
            onClick={onToggleCollapse}
            className={classNames(
              'border-t border-gray-700 p-4 text-gray-400',
              'hover:bg-gray-800 hover:text-gray-100'
            )}
            aria-label={collapsed ? 'Expand sidebar' : 'Collapse sidebar'}
          >
            <ChevronLeft
              className={classNames(
                'mx-auto h-5 w-5 transform transition-transform',
                collapsed ? 'rotate-180' : ''
              )}
            />
          </button>
        )}
      </div>
    );
  }
);

AdminTabs.displayName = 'AdminTabs';

