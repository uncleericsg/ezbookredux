'use client';

import { Save, AlertTriangle, Loader2, Link } from 'lucide-react';
import React, { useState } from 'react';
import { toast } from 'sonner';

import type { AMCPackage } from '../../types';

export interface AMCPackageMappingProps;
export type to;









interface AMCPackageMappingProps extends React.HTMLAttributes<HTMLDivElement> {
  pkg: AMCPackage;
  onSave: (packageId: string, appointmentTypeId: string) => void;
}

const AMCPackageMapping = ({
  pkg,
  onSave,
  className,
  ...props
}: AMCPackageMappingProps) => {
  const [selectedTypeId, setSelectedTypeId] = useState(pkg.appointmentTypeId || '');
  const [saving, setSaving] = useState(false);

  const handleSave = async () => {
    if (!selectedTypeId) {
      toast.error('Please select an appointment type');
      return;
    }

    try {
      setSaving(true);
      await onSave(pkg.id, selectedTypeId);
      toast.success('Package mapping updated successfully');
    } catch (error) {
      toast.error('Failed to update package mapping');
    } finally {
      setSaving(false);
    }
  };

  return (
    <div className={`space-y-4 ${className}`} {...props}>
      <div className="flex items-center space-x-2 text-sm text-gray-400">
        <Link className="h-4 w-4" />
        <span>Map to Appointment Type</span>
      </div>
      <select
        value={selectedTypeId}
        onChange={(e) => setSelectedTypeId(e.target.value)}
        className="w-full rounded-lg border border-gray-600 bg-gray-700 px-4 py-2"
      >
        <option value="">Select appointment type...</option>
        <option value="regular">Regular Service (60 mins)</option>
        <option value="extended">Extended Service (120 mins)</option>
        <option value="amc">AMC Service (60 mins)</option>
      </select>
      {!selectedTypeId && (
        <div className="flex items-start space-x-2 rounded-lg border border-yellow-500/20 bg-yellow-500/10 p-3 text-yellow-400">
          <AlertTriangle className="mt-0.5 h-5 w-5" />
          <p className="text-sm">Please select an appointment type to enable proper scheduling</p>
        </div>
      )}
      <button
        onClick={handleSave}
        disabled={saving || !selectedTypeId}
        className="btn btn-primary flex w-full items-center justify-center space-x-2"
      >
        {saving ? (
          <>
            <Loader2 className="h-5 w-5 animate-spin" />
            <span>Saving...</span>
          </>
        ) : (
          <>
            <Save className="h-5 w-5" />
            <span>Save Mapping</span>
          </>
        )}
      </button>
    </div>
  );
};

AMCPackageMapping.displayName = 'AMCPackageMapping';

export { AMCPackageMapping };

undefined.displayName = 'undefined';