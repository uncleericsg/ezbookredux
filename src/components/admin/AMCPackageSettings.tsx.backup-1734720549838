'use client';

import { Box, Button, Typography } from '@mui/material';
import { Save, Loader2 } from 'lucide-react';
import React, { useState } from 'react';
import { toast } from 'sonner';

export interface AMCPackageConfig;

export interface AMCPackageSettingsProps;


interface AMCPackageConfig {
  pageSettings: {
    title: string;
    description: string;
    ctaText: string;
  };
  packages: {
    id: string;
    name: string;
    price: number;
    acuityAppointmentTypeId?: string;
    visits: number;
    features: string[];
    recommended?: boolean;
    active: boolean;
    order: number;
  }[];
  coverage: {
    includedServices: string[];
    limitations: string[];
    exclusions: string[];
    responseTime: string;
    schedule: {
      frequency: string;
      customDays?: number;
    };
  };
  termsAndConditions: {
    content: string;
    version: string;
    effectiveDate: string;
    languages: {
      code: string;
      content: string;
    }[];
  };
}

const defaultConfig: AMCPackageConfig = {
  pageSettings: {
    title: '',
    description: '',
    ctaText: ''
  },
  packages: [],
  coverage: {
    includedServices: [],
    limitations: [],
    exclusions: [],
    responseTime: '',
    schedule: {
      frequency: ''
    }
  },
  termsAndConditions: {
    content: '',
    version: '1.0',
    effectiveDate: new Date().toISOString(),
    languages: []
  }
};

interface AMCPackageSettingsProps extends React.HTMLAttributes<HTMLDivElement> {
  initialConfig?: AMCPackageConfig;
}

const AMCPackageSettings = ({
  initialConfig = defaultConfig,
  className,
  ...props
}: AMCPackageSettingsProps) => {
  const [_config, _setConfig] = useState<AMCPackageConfig>(initialConfig);
  const [loading, setLoading] = useState(false);

  const handleSave = async () => {
    try {
      setLoading(true);
      // API call would go here
      await new Promise((resolve) => {
        /* eslint-disable-next-line no-undef */
        window.setTimeout(resolve, 1000);
      });
      toast.success('Settings saved successfully');
    } catch (_error) {
      toast.error('Failed to save settings');
    } finally {
      setLoading(false);
    }
  };

  return (
    <Box className={className} {...props}>
      <Typography variant="h5" gutterBottom>
        AMC Package Settings
      </Typography>
      <div className="space-y-4">
        {loading ? (
          <div className="flex items-center space-x-2">
            <Loader2 className="h-5 w-5 animate-spin" />
            <span>Saving...</span>
          </div>
        ) : (
          <Button onClick={handleSave} className="btn btn-primary flex items-center space-x-2">
            <Save className="h-4 w-4" />
            <span>Save Changes</span>
          </Button>
        )}
      </div>
    </Box>
  );
};

AMCPackageSettings.displayName = 'AMCPackageSettings';

export type { AMCPackageConfig };
export { AMCPackageSettings };

undefined.displayName = 'undefined';