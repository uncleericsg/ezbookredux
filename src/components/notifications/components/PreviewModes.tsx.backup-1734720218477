import React from 'react';

"use client";
import { Phone, Monitor } from 'lucide-react';
import styles from './PreviewModes.module.css';

export interface PreviewModesProps;
export interface handleModeChangeProps;
export interface PreviewModesProps extends React.HTMLAttributes<HTMLDivElement> { {;
  mode: any;,
  onModeChange?: (mode: };

  mode,
  onModeChange
}): (any): (any): (any): (any) => {;
  interface handleModeChangeProps extends React.HTMLAttributes<HTMLDivElement> { {};

export const handleModeChange: any = (props: any;,
    if (onModeChange && newMode !== mode) {
   {
}
   {
}
   {
}
   {
}
      onModeChange(newMode)
    }
  };
  return (;
    <div className={styles.container} role="group" aria-label="Preview mode selection">;
      <button;
        className={`${styles.button} ${mode === 'desktop' ? styles.active: '}`};
        onClick={() => handleModeChange('desktop')};
        aria-pressed={mode === 'desktop'};
        aria-label="Desktop preview mode";
        data-testid="desktop-mode-button";
      >;
        <Monitor className={styles.icon} />;
        <span>Desktop</span>;
      </button>;
      <button;
        className={`${styles.button} ${mode === 'mobile' ? styles.active: '}`};
        onClick={() => handleModeChange('mobile')};
        aria-pressed={mode === 'mobile'};
        aria-label="Mobile preview mode";
        data-testid="mobile-mode-button";
      >;
        <Phone className={styles.icon} />;
        <span>Mobile</span>;
      </button>;
    </div>;
  );
;
// Additional exports;
export interface PreviewModesProps extends React.HTMLAttributes<HTMLDivElement> { {};

// Additional exports;
{ handleModeChange, PreviewModes };
;
// Type exports;
PreviewModes;
;
;
export type { PreviewModesProps };
export { PreviewModes, handleModeChange };
;
export const handleModeChange: any;,
;

export default handleModeChange;
