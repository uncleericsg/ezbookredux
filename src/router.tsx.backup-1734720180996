import * as React from 'react';
import { Suspense } from 'react';
import { createBrowserRouter, Navigate, Routes, Route, BrowserRouter } from 'react-router-dom';

import { App } from './App';
import { AMCSignup } from './components/AMCSignup';
import { Dashboard } from './components/Dashboard';
import { Layout } from './components/Layout';
import { LoadingScreen } from './components/LoadingScreen';
import { Login } from './components/Login';
import { Notifications } from './components/Notifications';
import { ProtectedRoute } from './components/ProtectedRoute';
import { PublicRoute } from './components/PublicRoute';
import { ServiceCategorySelection } from './components/ServiceCategorySelection';
import { UserProfile } from './components/UserProfile';
import { AdminRoutes } from './components/admin/AdminRoutes';
import { FirstTimeBookingFlow } from './components/booking/FirstTimeBookingFlow';
import { PriceSelectionPage } from './components/booking/PriceSelectionPage';
import { ReturnCustomerBooking } from './components/booking/ReturnCustomerBooking';
import { BookingConfirmation } from './components/booking/BookingConfirmation';
import { ErrorBoundary } from './components/error-boundary/ErrorBoundary';
import { PaymentSuccess } from './components/payment/PaymentSuccess';
import { ROUTES } from './config/routes';
import { AdminViewProvider } from './contexts/AdminViewContext';

interface RouterProps {
  className?: string;
  children?: React.ReactNode;
}

const RouterComponent: React.FC<RouterProps> = () => {
  return (
    <BrowserRouter>
      <ErrorBoundary>
        <Suspense fallback={<LoadingScreen />}>
          <AdminViewProvider>
            <Routes>
              <Route element={<App />}>
                {/* Admin routes */}
                <Route path="/admin/*" element={<AdminRoutes />} />

                {/* Public routes */}
                <Route element={<Layout />}>
                  <Route index element={<ServiceCategorySelection />} />
                  <Route
                    path="login"
                    element={
                      <PublicRoute>
                        <Login />
                      </PublicRoute>
                    }
                  />
                  <Route
                    path="dashboard"
                    element={
                      <ProtectedRoute>
                        <Dashboard />
                      </ProtectedRoute>
                    }
                  />
                  <Route
                    path="profile"
                    element={
                      <ProtectedRoute>
                        <UserProfile />
                      </ProtectedRoute>
                    }
                  />
                  <Route
                    path="notifications"
                    element={
                      <ProtectedRoute>
                        <Notifications />
                      </ProtectedRoute>
                    }
                  />
                  <Route
                    path="amc-signup"
                    element={
                      <ProtectedRoute>
                        <AMCSignup />
                      </ProtectedRoute>
                    }
                  />

                  {/* Booking routes */}
                  <Route
                    path="booking/first-time"
                    element={<FirstTimeBookingFlow />}
                  />
                  <Route
                    path="booking/return"
                    element={<ReturnCustomerBooking />}
                  />
                  <Route
                    path="booking/price-selection"
                    element={<PriceSelectionPage />}
                  />
                  <Route
                    path="booking/confirmation"
                    element={<BookingConfirmation />}
                  />

                  {/* Payment routes */}
                  <Route path="payment/success" element={<PaymentSuccess />} />

                  {/* Catch-all route */}
                  <Route path="*" element={<Navigate to={ROUTES.NOT_FOUND} />} />
                </Route>
              </Route>
            </Routes>
          </AdminViewProvider>
        </Suspense>
      </ErrorBoundary>
    </BrowserRouter>
  );
};

export default RouterComponent;
