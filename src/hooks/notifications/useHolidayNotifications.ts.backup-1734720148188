import { useState, useEffect } from 'react';

import { holidayNotificationService } from '@/services/holidayNotifications';
import { Holiday } from '@/types/holidays';

/**
 * Hook for managing holiday notifications
 * @returns Object containing holiday notification state and functions
 */
export function useHolidayNotifications() {
  const [upcomingHolidays, setUpcomingHolidays] = useState<Holiday[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<Error | null>(null);

  useEffect(() => {
    async function fetchHolidays() {
      try {
        setLoading(true);
        const holidays = await holidayNotificationService.getUpcomingHolidays();
        setUpcomingHolidays(holidays);
      } catch (err) {
        setError(err instanceof Error ? err : new Error('Failed to fetch holidays'));
      } finally {
        setLoading(false);
      }
    }

    void fetchHolidays();
  }, []);

  return {
    upcomingHolidays,
    loading,
    error,
    refetch: async () => {
      try {
        setLoading(true);
        const holidays = await holidayNotificationService.getUpcomingHolidays();
        setUpcomingHolidays(holidays);
        setError(null);
      } catch (err) {
        setError(err instanceof Error ? err : new Error('Failed to fetch holidays'));
      } finally {
        setLoading(false);
      }
    }
  };
}