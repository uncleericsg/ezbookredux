import { useEffect, useCallback } from 'react';
import { useDispatch, useSelector } from 'react-redux';

import { RootState } from '../store';
import { setAdmin, setAdminData } from '../store/slices/adminSlice';
import { setAuthenticated, setToken } from '../store/slices/authSlice';
import { setUser, setLoading } from '../store/slices/userSlice';

export interface UserData;

export interface UserData;

export interface UserData;

interface UserData {
  id: string;
  email: string;
  role: string;
  accessLevel?: string;
}

/**
 * Hook to handle user authentication state.
 * This hook manages the synchronization between localStorage and Redux state.
 */
export const useUserMigration = () => {
  const dispatch = useDispatch();
  const { user } = useSelector((state: RootState) => state.user);
  const { isAuthenticated } = useSelector((state: RootState) => state.auth);

  const clearAuthState = useCallback(() => {
    dispatch(setToken(null));
    dispatch(setAuthenticated(false));
    dispatch(setUser(null));
    dispatch(setAdmin(false));
  }, [dispatch]);

  useEffect(() => {
    // Get token and user data from localStorage
    const token = window.localStorage.getItem('auth_token');
    const userDataString = window.localStorage.getItem('user_data');

    if (token && userDataString) {
      try {
        const parsedUser = JSON.parse(userDataString) as UserData;
        dispatch(setToken(token));
        dispatch(setAuthenticated(true));
        dispatch(setUser(parsedUser));

        // Set admin state if user is admin
        if (parsedUser.role === 'admin') {
          dispatch(setAdmin(true));
          dispatch(setAdminData({ 
            accessLevel: parsedUser.accessLevel || 'default'
          }));
        }
      } catch (error) {
        // Log error and clear auth state
        console.error('Error parsing user data:', error);
        clearAuthState();
      }
    } else {
      clearAuthState();
    }

    dispatch(setLoading(false));
  }, [dispatch, clearAuthState]); // Include all dependencies

  // Log auth state in development
  useEffect(() => {
    if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {
      // Only log in development environment
    }
  }, [user, isAuthenticated]);

  return null;
};