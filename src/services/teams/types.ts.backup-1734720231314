import * as React from 'react';

export interface TeamMember;
export interface Team;
export interface TeamAssignment;
export interface TeamAvailability;
export interface TeamPerformance;
export interface TeamSchedule;
export type TeamRole;
export type TeamStatus;
export type AssignmentStatus;
export type AssignmentPriority;

/**
 * Represents a team member
 */
export interface TeamMember {
  id: string;
  name: string;
  email: string;
  phone?: string;
  role: 'technician' | 'supervisor' | 'manager';
  status: 'active' | 'inactive' | 'on_leave';
  teamId: string;
  joinedAt: string;
  lastActive?: string;
  skills: string[];
  certifications?: string[];
}

/**
 * Represents a team
 */
export interface Team {
  id: string;
  name: string;
  active: boolean;
  members: TeamMember[];
  createdAt: string;
  updatedAt: string;
  region?: string;
  maxCapacity?: number;
  currentLoad?: number;
  supervisor?: string;
}

/**
 * Represents a team assignment
 */
export interface TeamAssignment {
  id: string;
  bookingId: string;
  teamId: string;
  assignedAt: string;
  manuallyAssigned: boolean;
  assignedBy?: string;
  status: 'pending' | 'accepted' | 'rejected' | 'completed';
  priority?: 'low' | 'medium' | 'high';
  notes?: string;
}

/**
 * Represents team availability
 */
export interface TeamAvailability {
  teamId: string;
  date: string;
  slots: {
    startTime: string;
    endTime: string;
    available: boolean;
    reason?: string;
  }[];
}

/**
 * Represents team performance metrics
 */
export interface TeamPerformance {
  teamId: string;
  period: string;
  metrics: {
    completedBookings: number;
    averageRating: number;
    responseTime: number;
    customerSatisfaction: number;
    onTimeArrival: number;
  };
}

/**
 * Represents team schedule
 */
export interface TeamSchedule {
  teamId: string;
  date: string;
  bookings: {
    id: string;
    startTime: string;
    endTime: string;
    status: 'scheduled' | 'in_progress' | 'completed' | 'cancelled';
    location: string;
  }[];
}

export type TeamRole = TeamMember['role'];
export type TeamStatus = TeamMember['status'];
export type AssignmentStatus = TeamAssignment['status'];
export type AssignmentPriority = NonNullable<TeamAssignment['priority']>;