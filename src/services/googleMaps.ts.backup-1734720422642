import { Loader } from '@googlemaps/js-api-loader';

export interface Window;

export interface Window;

export interface Window;

declare global {
  interface Window {
    googleMapsLoaded?: boolean;
  }
}

let mapsLoader: Loader | null = null;
let loadingPromise: Promise<void> | null = null;

/**
 * Initialize and load Google Maps
 * @returns Promise that resolves when Google Maps is loaded
 */
export async function initializeGoogleMaps(): Promise<void> {
  if (loadingPromise) {
    return loadingPromise;
  }

  if (!mapsLoader) {
    mapsLoader = new Loader({
      apiKey: import.meta.env.VITE_GOOGLE_MAPS_API_KEY,
      version: 'weekly',
      libraries: ['places', 'geometry']
    });
  }

  loadingPromise = mapsLoader
    .load()
    .then(() => {
      window.googleMapsLoaded = true;
    })
    .catch((error) => {
      console.error('Error loading Google Maps: ', error);
      loadingPromise = null; // Reset for retry
      throw error;
    });

  return loadingPromise;
}