import * as React from 'react';

export type definitions;
export interface Contract;
export interface Service;
export interface ContractAnalytics;
export type ContractAction;
export interface ContractFilters;
export interface ContractSortOptions;
export interface ContractPagination;
export interface ContractListResponse;
export interface ContractBulkAction;
export interface ContractExportOptions;
export type ServiceContract;

export type definitions;
export interface Contract;
export interface Service;
export interface ContractAnalytics;
export type ContractAction;
export interface ContractFilters;
export interface ContractSortOptions;
export interface ContractPagination;
export interface ContractListResponse;
export interface ContractBulkAction;
export interface ContractExportOptions;
export type ServiceContract;

export type definitions;
export interface Contract;
export interface Service;
export interface ContractAnalytics;
export type ContractAction;
export interface ContractFilters;
export interface ContractSortOptions;
export interface ContractPagination;
export interface ContractListResponse;
export interface ContractBulkAction;
export interface ContractExportOptions;
export type ServiceContract;

export type definitions;
export interface Contract;
export interface Service;
export interface ContractAnalytics;
export type ContractAction;
export interface ContractFilters;
export interface ContractSortOptions;
export interface ContractPagination;
export interface ContractListResponse;
export interface ContractBulkAction;
export interface ContractExportOptions;
export type ServiceContract;

/**
 * Contract type definitions
 */
export interface Contract {
  id: string;
  customerName: string;
  contractType: 'AMC1X' | 'AMC2X' | 'AMC3X' | 'AMC4X' | 'AMC5X' | 'AMC6X' | 'AMC7X' | 'AMC8X';
  startDate: Date;
  endDate: Date;
  status: 'active' | 'expiring' | 'expired';
  lastService?: Date;
  nextService?: Date;
  servicesCompleted: number;
  servicesTotal: number;
  contactNumber?: string;
  email?: string;
  location?: string;
  isBlocked?: boolean;
  overdueStatus?: '1-30' | '31-60' | '60+';
}

/**
 * Service type definitions
 */
export interface Service {
  id: string;
  date: Date;
  type: string;
  technician: string;
  status: 'completed' | 'pending' | 'cancelled';
  notes?: string;
  feedback?: {
    rating: number;
    comment?: string
  };
}

/**
 * Contract analytics type definitions
 */
export interface ContractAnalytics {
  renewalRate: number;
  customerSatisfaction: number;
  serviceCompletionRate: number;
  averageResponseTime: number;
  revenueMetrics: {
    totalRevenue: number;
    recurringRevenue: number;
    growthRate: number;
  };
}

/**
 * Contract actions type definitions
 */
export type ContractAction =
  | { type: 'UNBLOCK_CONTRACT'; payload: { id: string } }
  | { type: 'SEND_REMINDER'; payload: { id: string } }
  | { type: 'SCHEDULE_SERVICE'; payload: { contractId: string; date: Date } };

/**
 * Contract filters type definitions
 */
export interface ContractFilters {
  status?: ('active' | 'expiring' | 'expired')[];
  type?: ('AMC1X' | 'AMC2X' | 'AMC3X' | 'AMC4X' | 'AMC5X' | 'AMC6X' | 'AMC7X' | 'AMC8X')[];
  search?: string;
  startDate?: Date;
  endDate?: Date;
  overdueOnly?: boolean;
}

/**
 * Contract sort options type definitions
 */
export interface ContractSortOptions {
  field: keyof Contract;
  direction: 'asc' | 'desc';
}

/**
 * Contract pagination type definitions
 */
export interface ContractPagination {
  page: number;
  limit: number;
  total: number;
}

/**
 * Contract list response type definitions
 */
export interface ContractListResponse {
  contracts: Contract[];
  pagination: ContractPagination;
  filters: ContractFilters;
  sort: ContractSortOptions;
}

/**
 * Contract bulk action type definitions
 */
export interface ContractBulkAction {
  contractIds: string[];
  action: 'renew' | 'cancel' | 'block' | 'unblock';
  reason?: string;
}

/**
 * Contract export options type definitions
 */
export interface ContractExportOptions {
  format: 'csv' | 'pdf' | 'excel';
  filters?: ContractFilters;
  fields?: (keyof Contract)[];
}

/**
 * ServiceContract type definitions
 */
export type ServiceContract = Contract & {
  serviceHistory?: Service[];
  analytics?: ContractAnalytics;
};

// Removed the unnecessary function and export statements
undefined.displayName = 'undefined';
