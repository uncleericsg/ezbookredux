import * as React from 'react';

export type Json;
export type UserRole;
export interface Profile;
export interface ProfileInsert;
export interface ProfileUpdate;
export interface Address;
export interface AddressInsert;
export interface AddressUpdate;
export interface Service;
export interface ServiceInsert;
export interface ServiceUpdate;
export interface Booking;
export interface BookingInsert;
export interface BookingUpdate;
export interface Review;
export interface ReviewInsert;
export interface ReviewUpdate;
export interface DashboardStats;
export interface DashboardStatsInsert;
export interface DashboardStatsUpdate;
export interface Activity;
export interface ActivityInsert;
export interface ActivityUpdate;
export interface Notification;
export interface NotificationInsert;
export interface NotificationUpdate;
export interface Database;
export type Tables;
export type TablesInsert;
export type TablesUpdate;
export type Views;
export type Functions;
export type Enums;






































































































































undefined.displayName = 'undefined';



  role: UserRole;
  full_name: string | null;
  avatar_url: string | null;
  created_at: string;
  updated_at: string;
}


}


  user_id: string;
  block_street: string;
  floor_unit: string;
  postal_code: string;
  is_default: boolean;
  created_at: string;
}


}


  title: string;
  description: string | null;
  price: number;
  usual_price: number | null;
  duration_minutes: number;
  padding_before_minutes: number;
  padding_after_minutes: number;
  is_active: boolean;
}


}


  user_id: string;
  service_id: string;
  address_id: string;
  scheduled_start: string;
  scheduled_end: string;
  padding_start: string;
  padding_end: string;
  status: string;
  payment_status: string;
  payment_id: string | null;
  total_amount: number;
  notes: string | null;
  created_at: string;
  updated_at: string;
}


}


  booking_id: string;
  user_id: string;
  rating: number;
  comment: string | null;
  created_at: string;
}


}


  total_contracts: number;
  active_customers: number;
  monthly_revenue: number;
  service_rate: number;
  trends: {
    contracts: number;
    customers: number;
    revenue: number;
    satisfaction: number;
  };
  period: 'daily' | 'weekly' | 'monthly' | 'yearly';
  created_at: string;
  updated_at: string;
}


}


  type: 'contract_signed' | 'service_completed' | 'payment_received' | 'feedback_received' | 'appointment_scheduled' | 'appointment_cancelled' | 'service_requested';
  title: string;
  description: string | null;
  user_id: string | null;
  metadata: Json;
  created_at: string;
  updated_at: string;
}


}


  type: 'appointment_reminder' | 'payment_due' | 'service_update' | 'contract_update' | 'system_alert' | 'feedback_request';
  title: string;
  message: string;
  user_id: string;
  read: boolean;
  priority: 'high' | 'normal' | 'low';
  action_url: string | null;
  created_at: string;
  updated_at: string;
}


}


        Insert: ProfileInsert;
        Update: ProfileUpdate;
      };
      addresses: {
        Row: Address;
        Insert: AddressInsert;
        Update: AddressUpdate;
      };
      services: {
        Row: Service;
        Insert: ServiceInsert;
        Update: ServiceUpdate;
      };
      bookings: {
        Row: Booking;
        Insert: BookingInsert;
        Update: BookingUpdate;
      };
      reviews: {
        Row: Review;
        Insert: ReviewInsert;
        Update: ReviewUpdate;
      };
      dashboard_stats: {
        Row: DashboardStats;
        Insert: DashboardStatsInsert;
        Update: DashboardStatsUpdate;
      };
      activities: {
        Row: Activity;
        Insert: ActivityInsert;
        Update: ActivityUpdate;
      };
      notifications: {
        Row: Notification;
        Insert: NotificationInsert;
        Update: NotificationUpdate;
      };
    };
    Views: {
      [key: string]: {
        Row: Record<string, unknown>;
      };
    };
    Functions: {
      [key: string]: {
        Args: Record<string, unknown>;
        Returns: unknown;
      };
    };
    Enums: {
      [key: string]: string[];
    };
  };
}







const supabase = () => {
  return null
};

export { supabase };