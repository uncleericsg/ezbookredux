import * as React from 'react';

import { User } from './user';

export enum ContractType {
  STANDARD = 'standard',
  PREMIUM = 'premium',
  ENTERPRISE = 'enterprise'
}

export enum ContractStatus {
  ACTIVE = 'active',
  EXPIRED = 'expired',
  CANCELLED = 'cancelled',
  PENDING = 'pending'
}

export enum OverduePeriod {
  NONE = 'none',
  SHORT = 'short',
  MEDIUM = 'medium',
  LONG = 'long'
}

export interface Contract {
  id: string;
  userId: string;
  customerName: string;
  contractType: ContractType;
  startDate: Date;
  endDate: Date;
  status: ContractStatus;
  lastService?: Date;
  nextService?: Date;
  servicesCompleted: number;
  servicesRequired: number;
  contactNumber?: string;
  email?: string;
  location?: string;
  isBlocked: boolean;
  blockReason?: string;
  overdueStatus?: OverduePeriod;
}

export interface ContractSettings {
  servicesPerYear: number;
  expiryWarningDays: number;
  healthThresholds: {
    good: number;
    warning: number;
    critical: number;
  };
}

export interface ContractWithUser extends Contract {
  user: User;
}

export interface ContractStatistics {
  totalContracts: number;
  activeContracts: number;
  expiringContracts: number;
  overdueContracts: {
    '1-30': number;
    '31-60': number;
    '60+': number
  };
  completionRate: number;
  averageResponseTime: number;
}

export interface ContractNotification {
  id: string;
  contractId: string;
  userId: string;
  type: 'service' | 'renewal' | 'expiry';
  dueDate: Date;
  sentDate: Date;
  status: 'pending' | 'sent' | 'viewed' | 'clicked';
  message: string;
}

const contractSettings: { [key: string]: ContractSettings } = {
  'AMC1X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
  'AMC2X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
  'AMC3X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
  'AMC4X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
  'AMC5X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
  'AMC6X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
  'AMC7X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
  'AMC8X': { servicesPerYear: 4, expiryWarningDays: 30, healthThresholds: { good: 80, warning: 50, critical: 20 } },
}

const contract = () => {
  return null
};

export { Contract, ContractSettings, ContractWithUser, ContractStatistics, ContractNotification, contractSettings, contract };